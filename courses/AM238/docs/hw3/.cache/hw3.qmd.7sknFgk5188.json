{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: Homework 3\n",
                "date: 2024-10-23\n",
                "author:\n",
                "  - name: Kevin Silberberg\n",
                "    id: ks\n",
                "    orcid: 0009-0009-4825-1865\n",
                "    email: ksilberb@ucsc.edu\n",
                "    affiliation:\n",
                "      - name: University of California Santa Cruz\n",
                "        city: Santa Cruz\n",
                "        state: CA\n",
                "        href: https://www.ucsc.edu\n",
                "engine: julia-1.11\n",
                "julia:\n",
                "  exeflags: [\"--project=/home/kevinsilberberg/Repos/paxnomada/courses/uncertainty_quant/\"]\n",
                "execute:\n",
                "  daemon: true\n",
                "  cache: true\n",
                "  eval: true\n",
                "  freeze: auto\n",
                "---\n",
                "\n",
                "# Question 1\n",
                "\n",
                "Consider a Gaussian random process $X(t;\\omega)$ defined on the time interval [0, 5]. The process has mean $$\\mu(t) = t e^{\\sin{(3t)}}$$ and covariance function $$cov(t, s) = e^{\\frac{-|t-s|}{\\tau}}$$ where $\\tau > 0$ represents the temporal \"correlation length\" of the Gaussian process.\n",
                "\n",
                "## Part A\n",
                "\n",
                "Compute the standard deviation of $X(t;\\omega)$ at time $t$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "Notice that when $t = s$, the covariance is 1 because we have $e^0$.\n",
                "The variance of the random variable $X(t;\\omega)$ at any particular time $t$ is equal to the Covariance of $t$ with itself. Since the standard deviation is just the square root of the variance we can easily show that:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\sigma(t) = \\sqrt{Var(X(t;\\omega))} = \\sqrt{Cov(t, t)} = \\sqrt{e^{\\frac{-|t - t|}{\\tau}}} = \\sqrt{e^0} = 1\n",
                "\\end{align}\n",
                "\n",
                "## Part B\n",
                "\n",
                "Compute the covariance matrix of the random variables $X(1;\\omega)$ and $X(2;\\omega)$ as a function of $\\tau$. What happens when $\\tau \\rightarrow 0$?\n",
                "\n",
                "### Solution\n",
                "\n",
                "Therefore, the covariance is always 1 along the diagonal elements of the covariance matrix $\\Sigma$. Additionally, the off-diagonal elements are equal because we are taking the difference between the absolute values of $t$ and $s$. Thus, the matrix is symmetric.\n",
                "\n",
                "\\begin{align}\n",
                "\t\\Sigma_X(\\tau) = \\left[\n",
                "\t\\begin{matrix}\n",
                "\t\t1.0 & e^{\\frac{-|1-2|}{\\tau}} \\\\\n",
                "\t\te^{\\frac{-|2-1|}{\\tau}} & 1.0\n",
                "\t\\end{matrix}\\right]\n",
                "\\end{align}\n",
                "\n",
                "For $\\Sigma(\\tau \\rightarrow 0) \\rightarrow \\mathbf{I}$ where $\\mathbf{I}$ is the identity matrix.\n",
                "\n",
                "\\begin{align}\n",
                "\t\\lim_{\\tau \\rightarrow \\infty} \\Sigma_X(\\tau) = \\left[\\begin{matrix} 1 & 0 \\\\ 0 & 1 \\end{matrix}\\right] = \\mathbf{I}\n",
                "\\end{align}\n",
                "\n",
                "## Part C\n",
                "\n",
                "Plot a few samples of $X(t;\\omega)$ for $\\tau = 0.02$ and $\\tau = 1$ on a temporal with $5000$ points in [0, 5] (two different figures). Show that such sample paths are approximately within $\\mu(t) \\pm 2\\sigma(t)$, where $\\sigma(t)$ is the standard deviation of the process.\n",
                "\n",
                "### Solution\n",
                "\n",
                "First, we define a 1D grid for time from 0 to 5, equally spaced with 5000 points. We then define the functions for the mean and covariance and construct a vector of means corresponding to each point in time. Next, we construct a covariance matrix, perform the lower triangular Cholesky factorization of that matrix, and generate a random vector.\n",
                "$$\\bar{X_i} = \\bar{\\mu}_i + \\bar{A}\\bar{\\xi}$$ where $\\xi \\sim \\mathcal{N}(0, 1)$"
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "using GLMakie\n",
                "using Distributions\n",
                "using LinearAlgebra\n",
                "using KernelDensity\n",
                "using SpecialFunctions\n",
                "\n",
                "function makefig1(τ::Float64)\n",
                "    t = LinRange(0.0, 5.0, 1000)\n",
                "    μ(t) = t*exp(sin(3*t))\n",
                "    cov(t, s) = exp((-abs(t-s)) / (τ))\n",
                "    μs = μ.(t)\n",
                "    Σ = Matrix{Float64}(undef, length(t), length(t))\n",
                "    for idx in CartesianIndices(Σ)\n",
                "        Σ[idx] = cov(t[idx.I[1]], t[idx.I[2]])\n",
                "    end\n",
                "    A = cholesky(Σ).L\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1])\n",
                "    for i in 1:5\n",
                "        Xi = μs .+ A*randn(length(t))\n",
                "        lines!(t, Xi)\n",
                "    end\n",
                "    lines!(ax, t, μs, color = :red, label = \"μ\")\n",
                "    lines!(ax, t, (μs .+ 2),\n",
                "           color = :black,\n",
                "           linestyle = :dash)\n",
                "    lines!(ax, t, (μs .+ -2),\n",
                "           color = :black,\n",
                "           linestyle = :dash,\n",
                "           label = \"μ ± 2\")\n",
                "    Legend(fig[1, 2], ax)\n",
                "    save(\"question1c_$τ.png\", fig)\n",
                "end\n",
                "makefig1(0.02);\n",
                "makefig1(1.0);"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "::: {layout=\"[1, 1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "  ![$\\tau = 0.02$](question1c_0.02.png){#fig-image1 width=\"105%\"}\n",
                "\n",
                "  ![$\\tau = 1.0$](question1c_1.0.png){#fig-image2 width=\"105%\"}\n",
                ":::\n",
                "\n",
                "# Question 2\n",
                "\n",
                "Show that the sequence of numbers $\\{U_k\\}$ defined as\n",
                "\n",
                "$$U_k = \\frac{(\\hat{X}_k - \\hat{Y}_k) \\quad \\mod m_1}{m_1 + 1}$$ where\n",
                "\\begin{align}\\hat{X}_k =\n",
                "\t\\begin{cases}\n",
                "\t\tX_k & \\text{if} \\quad X_k \\geq 0 \\\\\n",
                "\t\tX_k - m_1 X_k & \\text{if} \\quad X_k < 0\n",
                "\t\\end{cases} & \\quad\t\\hat{Y}_k =\n",
                "\t\\begin{cases}\n",
                "\t\tY_k & \\text{if} \\quad Y_k \\geq 0 \\\\\n",
                "\t\tY_k - m_2 Y_k & \\text{if} \\quad Y_k < 0\n",
                "\t\\end{cases}\n",
                "\\end{align}\n",
                "\n",
                "\\begin{align}\n",
                "\tX_k = (1403580X_{k-2} - 810728X_{k-3}) \\quad \\mod m_1 \\\\\n",
                "\tY_k = (527612Y_{k-1} - 1370589Y_{k-3}) \\quad \\mod m_2\n",
                "\\end{align}\n",
                "\n",
                "Let $m_1 = 2^{32} - 209$, $m_2 = 2^{32} - 22853$, and $$X_{-3} = X_{-2} = X_{-1} = Y_{-3} = Y_{-2} = Y_{-1} = 111$$ is approximately uniformly distributed in [0, 1]. To this end, generate $N = 10^6$ numbers $U_j$ where $j = 1, 2, ..., N$ and plot the histogram of relative frquencies approximateing the PDF in [0, 1].\n",
                "\n",
                "### Solution\n",
                "\n",
                "Code that produces a vector of Float64 values of length $N$ from the seed $111$. We use the modulo function included in Julia Base."
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function MRG32k3a(seed::Integer, N::Integer)\n",
                "    m₁ = 2.0^32 - 209\n",
                "    m₂ = 2.0^32 - 22853\n",
                "\n",
                "    X = Vector{Float64}(undef, N+3)\n",
                "    Y = Vector{Float64}(undef, N+3)\n",
                "\n",
                "    for i = 1:3\n",
                "        X[i] = Float64(seed)\n",
                "        Y[i] = Float64(seed)\n",
                "    end\n",
                "\n",
                "    for j in 1:length(X) - 3\n",
                "        X[j+3] = mod(1403580*X[j+1] - 810728*X[j], m₁)\n",
                "        Y[j+3] = mod(527642*Y[j+2] - 1370589*Y[j], m₂)\n",
                "    end\n",
                "\n",
                "    transformX(Xk::Float64) = Xk ≥ 0 ? Xk : Xk - m₁*Xk\n",
                "    transformY(Yk::Float64) = Yk ≥ 0 ? Yk : Yk - m₂*Yk\n",
                "\n",
                "    Xhat = transformX.(X)\n",
                "    Yhat = transformY.(Y)\n",
                "\n",
                "    Uk = Vector{Float64}(undef, N)\n",
                "    for i in eachindex(Xhat)\n",
                "        if i > length(Xhat) - 3\n",
                "            break\n",
                "        end\n",
                "        Uk[i] = mod(Xhat[i+3] - Yhat[i+3], m₁) / (m₁ + 1)\n",
                "    end\n",
                "    Uk\n",
                "end\n",
                "\n",
                "function question2()\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "        title = \"Relative frequencies of Uⱼ for N = 10⁶\",\n",
                "        xlabel = \"Uⱼ\",\n",
                "        ylabel = \"frequency\"\n",
                "    )\n",
                "    hist!(ax, MRG32k3a(111, 1000000), bins = 80)\n",
                "    save(\"question2.png\", fig)\n",
                "end\n",
                "question2();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![Histogram of relative frequencies of $10^6$ samples using the MRG32k3a algorithm](question2.png){#fig-image3 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "# Question 3\n",
                "\n",
                "Consider the stochastic differential equation (SDE)\n",
                "\n",
                "\\begin{equation}\\tag{1}\\label{SDE}\n",
                "\tdX(t;\\omega) = -X(t;\\omega)^3 dt + \\frac{1}{2} dW(t;\\omega) \\quad X(0;\\omega) = X_0(\\omega)\n",
                "\\end{equation}\n",
                "\n",
                "where $W(t;\\omega)$ is a Wiener process, and $X_0(\\omega)$ is a uniformly distributed random variable in [1, 2]. Let us discretize (\\ref{SDE}) with the Euler-Maruyama scheme,\n",
                "\n",
                "\\begin{equation}\\tag{2}\\label{Euler-M}\n",
                "\tX_{k+1} = X_k - X_k^3 \\Delta t + \\frac{1}{2} \\Delta W_k\n",
                "\\end{equation}\n",
                "\n",
                "where $X_k = X(t_k;\\omega)$, $\\Delta t = t_{k+1} - t_k$ and $\\{\\Delta W_k\\}$ are i.i.d. Gaussian random variables with zero mean and variance $\\Delta t$.\n",
                "\n",
                "## Part A\n",
                "\n",
                "Write the Fokker-Planck (FKP) equation corresponding to the SDE (\\ref{SDE}).\n",
                "\n",
                "### Solution\n",
                "\n",
                "From course notes 3, we know that the Fokker-Planck equation to the general SDE\n",
                "\n",
                "\\begin{align}\n",
                "\tdX_t = m(X_t, t)dt + s(X_t, t)dW_t \\quad X(0) = X_0\n",
                "\\end{align}\n",
                "\n",
                "is\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial p(x, t)}{\\partial t} + \\frac{\\partial}{\\partial x} \\left[m(x, t)p(x, t)\\right] = \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2} \\left[s(x, t)^2p(x, t)\\right]\n",
                "\\end{align}\n",
                "\n",
                "for equation (\\ref{SDE}) we can see the $m(x, t) = -X_t^3$ and $s(x, t) = \\frac{1}{2}$, thus the Fokker-Plank equation for (\\ref{SDE}) is\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial p}{\\partial t} + \\frac{\\partial}{\\partial x} \\left[-x^3 p(x, t)\\right] = \\frac{1}{8} \\frac{\\partial^2p}{\\partial x^2}\n",
                "\\end{align}\n",
                "\n",
                "## Part B\n",
                "\n",
                "Using the FKP equation show that there exists a statistically stationary solution and compute the PDF $p^*(x)$ of such a stationary solution analytically. Is the equilibrium distribution $p^*(x)$ Gaussian?\n",
                "\n",
                "\\small Hint: To compute a stationary solution to the Fokker-Planck equation, set the time derivative $\\frac{\\partial p}{\\partial t} = 0$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "We are left to solve the following DE:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial}{\\partial x} \\left( x^3 p + \\frac{1}{8} \\frac{\\partial p}{\\partial x}\\right) &= 0 \\\\\n",
                "\tx^3 p + \\frac{1}{8} \\frac{\\partial p}{\\partial x} &= 0 \\\\\n",
                "\t8 \\int x^3 dx &= - \\int \\frac{1}{p} dp\\\\\n",
                "\t2x^4 &= -\\ln{p} + k\\\\\n",
                "\tp(x) &= ke^{-2x^4}\n",
                "\\end{align}\n",
                "\n",
                "We need to find a scaling constant $k$ for the pdf $p(x, t)$ such that when you integrate from $[-\\infty, \\infty]$ you get $1$.\n",
                "\n",
                "\\begin{align}\n",
                "\tk\\int_{-\\infty}^{\\infty} e^{-2x^4}dx &= 1\n",
                "\\end{align}\n",
                "\n",
                "Notice the function is even and thus we can write the integral as such:\n",
                "\n",
                "\\begin{align}\n",
                "\t2k\\int_{0}^{\\infty} e^{-2x^4}dx &= 1 \\quad \\begin{cases} u &= x^4 \\rightarrow u^{-\\frac{3}{4}} = x^{-3}\\\\ \\frac{du}{dx} &= 4x^3 \\\\ \\frac{1}{4}u^{-\\frac{3}{4}}du &= dx\\end{cases} \\\\\n",
                "\t\\frac{K}{2} \\int_0^{\\infty} e^{-2u}u^{\\frac{1}{4} -1} du &= 1 \\quad \\begin{cases}\\xi &= 2u \\\\ \\frac{d\\xi}{2} &= du\\end{cases} \\\\\n",
                "\t\\frac{K}{4} \\int_0^{\\infty} e^{-\\xi} \\left(\\frac{\\xi}{2}\\right)^{-\\frac{3}{4}} d\\xi &= 1\\\\\n",
                "\t\\frac{2^{\\frac{3}{4}}K}{4} \\int_0^{\\infty} e^{-\\xi} \\xi^{\\frac{1}{4} - 1} d\\xi\n",
                "\\end{align}\n",
                "\n",
                "The Gamma function is $$\\Gamma(z) = \\int_0^{\\infty} e^{-\\xi}\\xi^{z-1}d\\xi$$\n",
                "\n",
                "Solving for $K$ we have\n",
                "\\begin{align}\n",
                "\tK\\frac{\\Gamma\\left(\\frac{1}{4}\\right)}{2\\sqrt[4]{2}} &= 1\\\\\n",
                "\tK &= \\frac{2\\sqrt[4]{2}}{\\Gamma\\left(\\frac{1}{4}\\right)}\n",
                "\\end{align}\n",
                "\n",
                "The PDF $p^*(x)$ is thus,\n",
                "\n",
                "$$p^*(x) = \\frac{2\\sqrt[4]{2}}{\\Gamma\\left(\\frac{1}{4}\\right)}e^{-2x^4}$$"
            ]
        },
        {
            "id": "6",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "p(x) = (2^(7/8) / gamma(1/4)) * exp(-2*x^4)\n",
                "function question3c()\n",
                "    x = LinRange(-2, 2, 1000)\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "              title = L\"$p^*(x)=\\frac{2^{\\frac{7}{8}}}{\\Gamma\\left(\\frac{1}{4}\\right)}e^{-2x^4}$\",\n",
                "              xlabel = L\"$x$\",\n",
                "              ylabel = L\"$p^*(x)$\")\n",
                "    lines!(ax, x, p.(x))\n",
                "    save(\"question3c.png\", fig)\n",
                "end\n",
                "question3c();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "7",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![The pdf](question3c.png){#fig-image4 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "We can see that the pdf is non-gaussian. A gaussian distribution is of the form $f(x) = e^{-x^2}$.\n",
                "\n",
                "## Part C\n",
                "\n",
                "Write the conditional transition density $p(x_{k+1}|x_k)$ defined by discrete Markov process (\\ref{Euler-M}). Does the functional form of the transition density depend on the particular time $t_k$? Or is it the same for all times?\n",
                "\n",
                "### Solution\n",
                "\n",
                "We know that the Wiener process is a gaussian random variable with zero mean and variance $\\Delta t$. For equation (\\ref{Euler-M}) we have $Var(\\frac{1}{2} \\Delta W_k) = \\frac{1}{4}\\Delta t$.\n",
                "\n",
                "By the property that the sum of a constant and a gaussian random variable is still a gaussian with a shifted mean, we can see that if the current state $X_k = x$, the next state $X_{k+1}$ is\n",
                "\n",
                "\\begin{align}\n",
                "\tX_{k+1} = x - x^3 \\Delta t + \\frac{1}{2} \\Delta W_k\n",
                "\\end{align}\n",
                "\n",
                "Thus\n",
                "\n",
                "\\begin{align}\n",
                "\tX_{k+1} | X_k = x \\sim \\mathcal{N}(x-x^3 \\Delta t, \\frac{1}{4} \\Delta t)\n",
                "\\end{align}\n",
                "\n",
                "From this we can explicitly write out the conditional transition density $p(x_{k+1} | x_k)$. Let $X_{k+1} = y$ and $X_k = x$\n",
                "\n",
                "\\begin{align}\n",
                "\tp(y | x) = \\frac{2}{\\sqrt{2 \\pi \\Delta t}}e^{-\\frac{2(y - x + x^3 \\Delta t)^2}{\\Delta t}}\n",
                "\\end{align}\n",
                "\n",
                "The functional form of the transition density only depends on $\\Delta t$, which is constant for all time.\n",
                "\n",
                "## Part D\n",
                "\n",
                "By using numerical integration show that the PDF $p^*(x)$ of the statistical steady state you computed in part b is a solution to the fixed point problem\n",
                "\n",
                "\\begin{equation}\\tag{3}\\label{Volterra}\n",
                "\tp^*(x) = \\int_{-\\infty}^{\\infty} p(x|y)p^*(y)dy\n",
                "\\end{equation}\n",
                "\n",
                "where $p(x|y)$ is the transition density you computed in part c. Given that $p^*(y)$ decays quite fast, for numerical purposes it is sufficient to approximate the infinite domain of the integral (\\ref{Volterra}) to [-5, 5].\n",
                "\n",
                "### Solution\n",
                "\n",
                "## Part E\n",
                "\n",
                "Plot a few sample paths of the SDE for $\\Delta = 10^{-4}$ for $t \\in [0, 5]$.\n",
                "\n",
                "### Solution"
            ]
        },
        {
            "id": "8",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function question3partE()\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:5.0\n",
                "    N = 5\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    procs = Matrix{Float64}(undef, length(ts), N)\n",
                "    for i in 1:N\n",
                "        procs[1, i] = rand() + 1.0\n",
                "    end\n",
                "\n",
                "    for i in 1:N\n",
                "        for j in 2:length(ts)\n",
                "            procs[j, i] = procs[j-1, i] - (procs[j-1, i]^3)*Δt + 0.5*rand(W)\n",
                "        end\n",
                "    end\n",
                "\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "        title = L\"$X_{k+1} = X_k - X_k^3 \\Delta t + \\frac{1}{2} \\Delta W_k$\",\n",
                "        xlabel = \"x\")\n",
                "    for i in 1:N\n",
                "        lines!(ax, ts, procs[:, i])\n",
                "    end\n",
                "    save(\"question3e.png\", fig)\n",
                "end\n",
                "question3partE();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "9",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![5 sample paths of the SDE for $\\Delta = 10^{-4}$ for $t \\in [0, 5]$](question3e.png){#fig-image4 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "## Part F\n",
                "By computing a sufficiently large number of sample paths, Estimate the PDF of $X(t;\\omega)$ numerically (e.g. by using a kernel density PDF estimator or method of relative frequencies) at different times and show that it converges to the steady state PDF you computed in part b.\n",
                "\n",
                "### Solution"
            ]
        },
        {
            "id": "10",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function question3partF()\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:5.0\n",
                "    N = 200\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    procs = Matrix{Float64}(undef, length(ts), N)\n",
                "    println(\"initializing matrix with uniform random numbers in [1, 2]\")\n",
                "    for i in 1:N\n",
                "        procs[1, i] = rand() + 1.0\n",
                "    end\n",
                "    println(\"simulating random process\")\n",
                "    for i in 1:N\n",
                "        println(\"$N complete\")\n",
                "        for j in 2:length(ts)\n",
                "            procs[j, i] = procs[j-1, i] - (procs[j-1, i]^3)*Δt + 0.5*rand(W)\n",
                "        end\n",
                "    end\n",
                "\n",
                "    fig = Figure();display(fig)\n",
                "    ax1 = Axis(fig[1, 1],\n",
                "    title = \"$N SDE paths\")\n",
                "    ax2 = Axis(fig[1, 2],\n",
                "        title = \"KDE Density\")\n",
                "    x = LinRange(-5, 5, 1000)\n",
                "    xlims!(ax2, -5, 5)\n",
                "    for i in 1:N\n",
                "        lines!(ax1, ts, procs[:, i], linewidth = 1)\n",
                "    end\n",
                "    d = kde(procs[1, :])\n",
                "    vlinet = Observable(ts[1])\n",
                "    kde_data = Observable((d.x, d.density))\n",
                "    kde_line = lines!(ax2, [0.0], [0.0], color = :blue, label = \"KDE\")\n",
                "\n",
                "    kde_plot = lift(kde_data) do (x, density)\n",
                "        kde_line[1] = x\n",
                "        kde_line[2] = density\n",
                "    end\n",
                "\n",
                "    vlines!(ax1, vlinet, color = :red, label = \"time\")\n",
                "    lines!(ax2, x, p.(x), color = :red, linestyle = :dash, label = L\"$p^*(x)$\")\n",
                "    Legend(fig[2, 1], ax1, orientation = :horizontal)\n",
                "    Legend(fig[2, 2], ax2, orientation = :horizontal)\n",
                "    println(\"starting video rendering...\")\n",
                "    record(fig, \"question3partF.mp4\", 2:100:length(ts); framerate = 30) do k\n",
                "        println(\"frame $k\")\n",
                "        vlinet[] = ts[k]\n",
                "        d = kde(procs[k, :])\n",
                "        kde_data[] = (d.x, d.density)\n",
                "    end\n",
                "end\n",
                "question3partF()"
            ],
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "initializing matrix with uniform random numbers in [1, 2]\nsimulating random process\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\n200 complete\nstarting video rendering...\nframe 2\nframe 102\nframe 202\nframe 302\nframe 402\nframe 502\nframe 602\nframe 702\nframe 802\nframe 902\nframe 1002\nframe 1102\nframe 1202\nframe 1302\nframe 1402\nframe 1502\nframe 1602\nframe 1702\nframe 1802\nframe 1902\nframe 2002\nframe 2102\nframe 2202\nframe 2302\nframe 2402\nframe 2502\nframe 2602\nframe 2702\nframe 2802\nframe 2902\nframe 3002\nframe 3102\nframe 3202\nframe 3302\nframe 3402\nframe 3502\nframe 3602\nframe 3702\nframe 3802\nframe 3902\nframe 4002\nframe 4102\nframe 4202\nframe 4302\nframe 4402\nframe 4502\nframe 4602\nframe 4702\nframe 4802\nframe 4902\nframe 5002\nframe 5102\nframe 5202\nframe 5302\nframe 5402\nframe 5502\nframe 5602\nframe 5702\nframe 5802\nframe 5902\nframe 6002\nframe 6102\nframe 6202\nframe 6302\nframe 6402\nframe 6502\nframe 6602\nframe 6702\nframe 6802\nframe 6902\nframe 7002\nframe 7102\nframe 7202\nframe 7302\nframe 7402\nframe 7502\nframe 7602\nframe 7702\nframe 7802\nframe 7902\nframe 8002\nframe 8102\nframe 8202\nframe 8302\nframe 8402\nframe 8502\nframe 8602\nframe 8702\nframe 8802\nframe 8902\nframe 9002\nframe 9102\nframe 9202\nframe 9302\nframe 9402\nframe 9502\nframe 9602\nframe 9702\nframe 9802\nframe 9902\nframe 10002\nframe 10102\nframe 10202\nframe 10302\nframe 10402\nframe 10502\nframe 10602\nframe 10702\nframe 10802\nframe 10902\nframe 11002\nframe 11102\nframe 11202\nframe 11302\nframe 11402\nframe 11502\nframe 11602\nframe 11702\nframe 11802\nframe 11902\nframe 12002\nframe 12102\nframe 12202\nframe 12302\nframe 12402\nframe 12502\nframe 12602\nframe 12702\nframe 12802\nframe 12902\nframe 13002\nframe 13102\nframe 13202\nframe 13302\nframe 13402\nframe 13502\nframe 13602\nframe 13702\nframe 13802\nframe 13902\nframe 14002\nframe 14102\nframe 14202\nframe 14302\nframe 14402\nframe 14502\nframe 14602\nframe 14702\nframe 14802\nframe 14902\nframe 15002\nframe 15102\nframe 15202\nframe 15302\nframe 15402\nframe 15502\nframe 15602\nframe 15702\nframe 15802\nframe 15902\nframe 16002\nframe 16102\nframe 16202\nframe 16302\nframe 16402\nframe 16502\nframe 16602\nframe 16702\nframe 16802\nframe 16902\nframe 17002\nframe 17102\nframe 17202\nframe 17302\nframe 17402\nframe 17502\nframe 17602\nframe 17702\nframe 17802\nframe 17902\nframe 18002\nframe 18102\nframe 18202\nframe 18302\nframe 18402\nframe 18502\nframe 18602\nframe 18702\nframe 18802\nframe 18902\nframe 19002\nframe 19102\nframe 19202\nframe 19302\nframe 19402\nframe 19502\nframe 19602\nframe 19702\nframe 19802\nframe 19902\nframe 20002\nframe 20102\nframe 20202\nframe 20302\nframe 20402\nframe 20502\nframe 20602\nframe 20702\nframe 20802\nframe 20902\nframe 21002\nframe 21102\nframe 21202\nframe 21302\nframe 21402\nframe 21502\nframe 21602\nframe 21702\nframe 21802\nframe 21902\nframe 22002\nframe 22102\nframe 22202\nframe 22302\nframe 22402\nframe 22502\nframe 22602\nframe 22702\nframe 22802\nframe 22902\nframe 23002\nframe 23102\nframe 23202\nframe 23302\nframe 23402\nframe 23502\nframe 23602\nframe 23702\nframe 23802\nframe 23902\nframe 24002\nframe 24102\nframe 24202\nframe 24302\nframe 24402\nframe 24502\nframe 24602\nframe 24702\nframe 24802\nframe 24902\nframe 25002\nframe 25102\nframe 25202\nframe 25302\nframe 25402\nframe 25502\nframe 25602\nframe 25702\nframe 25802\nframe 25902\nframe 26002\nframe 26102\nframe 26202\nframe 26302\nframe 26402\nframe 26502\nframe 26602\nframe 26702\nframe 26802\nframe 26902\nframe 27002\nframe 27102\nframe 27202\nframe 27302\nframe 27402\nframe 27502\nframe 27602\nframe 27702\nframe 27802\nframe 27902\nframe 28002\nframe 28102\nframe 28202\nframe 28302\nframe 28402\nframe 28502\nframe 28602\nframe 28702\nframe 28802\nframe 28902\nframe 29002\nframe 29102\nframe 29202\nframe 29302\nframe 29402\nframe 29502\nframe 29602\nframe 29702\nframe 29802\nframe 29902\nframe 30002\nframe 30102\nframe 30202\nframe 30302\nframe 30402\nframe 30502\nframe 30602\nframe 30702\nframe 30802\nframe 30902\nframe 31002\nframe 31102\nframe 31202\nframe 31302\nframe 31402\nframe 31502\nframe 31602\nframe 31702\nframe 31802\nframe 31902\nframe 32002\nframe 32102\nframe 32202\nframe 32302\nframe 32402\nframe 32502\nframe 32602\nframe 32702\nframe 32802\nframe 32902\nframe 33002\nframe 33102\nframe 33202\nframe 33302\nframe 33402\nframe 33502\nframe 33602\nframe 33702\nframe 33802\nframe 33902\nframe 34002\nframe 34102\nframe 34202\nframe 34302\nframe 34402\nframe 34502\nframe 34602\nframe 34702\nframe 34802\nframe 34902\nframe 35002\nframe 35102\nframe 35202\nframe 35302\nframe 35402\nframe 35502\nframe 35602\nframe 35702\nframe 35802\nframe 35902\nframe 36002\nframe 36102\nframe 36202\nframe 36302\nframe 36402\nframe 36502\nframe 36602\nframe 36702\nframe 36802\nframe 36902\nframe 37002\nframe 37102\nframe 37202\nframe 37302\nframe 37402\nframe 37502\nframe 37602\nframe 37702\nframe 37802\nframe 37902\nframe 38002\nframe 38102\nframe 38202\nframe 38302\nframe 38402\nframe 38502\nframe 38602\nframe 38702\nframe 38802\nframe 38902\nframe 39002\nframe 39102\nframe 39202\nframe 39302\nframe 39402\nframe 39502\nframe 39602\nframe 39702\nframe 39802\nframe 39902\nframe 40002\nframe 40102\nframe 40202\nframe 40302\nframe 40402\nframe 40502\nframe 40602\nframe 40702\nframe 40802\nframe 40902\nframe 41002\nframe 41102\nframe 41202\nframe 41302\nframe 41402\nframe 41502\nframe 41602\nframe 41702\nframe 41802\nframe 41902\nframe 42002\nframe 42102\nframe 42202\nframe 42302\nframe 42402\nframe 42502\nframe 42602\nframe 42702\nframe 42802\nframe 42902\nframe 43002\nframe 43102\nframe 43202\nframe 43302\nframe 43402\nframe 43502\nframe 43602\nframe 43702\nframe 43802\nframe 43902\nframe 44002\nframe 44102\nframe 44202\nframe 44302\nframe 44402\nframe 44502\nframe 44602\nframe 44702\nframe 44802\nframe 44902\nframe 45002\nframe 45102\nframe 45202\nframe 45302\nframe 45402\nframe 45502\nframe 45602\nframe 45702\nframe 45802\nframe 45902\nframe 46002\nframe 46102\nframe 46202\nframe 46302\nframe 46402\nframe 46502\nframe 46602\nframe 46702\nframe 46802\nframe 46902\nframe 47002\nframe 47102\nframe 47202\nframe 47302\nframe 47402\nframe 47502\nframe 47602\nframe 47702\nframe 47802\nframe 47902\nframe 48002\nframe 48102\nframe 48202\nframe 48302\nframe 48402\nframe 48502\nframe 48602\nframe 48702\nframe 48802\nframe 48902\nframe 49002\nframe 49102\nframe 49202\nframe 49302\nframe 49402\nframe 49502\nframe 49602\nframe 49702\nframe 49802\nframe 49902\n"
                },
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "\"question3partF.mp4\""
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "11",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "::: {.content-visible when-format=\"html\"}\n",
                "<video width=\"700\" autoplay loop muted>\n",
                "  <source src=\"question3partF.mp4\" type=\"video/mp4\">\n",
                "  Your browser does not support the video tag.\n",
                "</video>\n",
                ":::"
            ]
        }
    ],
    "timestamp": "2025-07-07T12:27:06.158",
    "file": "/home/kevinsilberberg/Repos/paxnomada/courses/uncertainty_quant/docs/hw3/hw3.qmd",
    "qnr_schema_version": "1.0.0"
}