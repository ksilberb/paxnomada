{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: Homework 3\n",
                "date: 2024-10-23\n",
                "author:\n",
                "  - name: Kevin Silberberg\n",
                "    id: ks\n",
                "    orcid: 0009-0009-4825-1865\n",
                "    email: ksilberb@ucsc.edu\n",
                "    affiliation:\n",
                "      - name: University of California Santa Cruz\n",
                "        city: Santa Cruz\n",
                "        state: CA\n",
                "        href: https://www.ucsc.edu\n",
                "engine: julia-1.11\n",
                "julia:\n",
                "  exeflags: [\"--project=/home/kevinsilberberg/Repos/paxnomada/courses/AM238/\"]\n",
                "execute:\n",
                "  daemon: true\n",
                "  cache: true\n",
                "  eval: true\n",
                "  freeze: auto\n",
                "---\n",
                "\n",
                "# Question 1\n",
                "\n",
                "Consider a Gaussian random process $X(t;\\omega)$ defined on the time interval [0, 5]. The process has mean $$\\mu(t) = t e^{\\sin{(3t)}}$$ and covariance function $$cov(t, s) = e^{\\frac{-|t-s|}{\\tau}}$$ where $\\tau > 0$ represents the temporal \"correlation length\" of the Gaussian process.\n",
                "\n",
                "## Part A\n",
                "\n",
                "Compute the standard deviation of $X(t;\\omega)$ at time $t$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "Notice that when $t = s$, the covariance is 1 because we have $e^0$.\n",
                "The variance of the random variable $X(t;\\omega)$ at any particular time $t$ is equal to the Covariance of $t$ with itself. Since the standard deviation is just the square root of the variance we can easily show that:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\sigma(t) = \\sqrt{Var(X(t;\\omega))} = \\sqrt{Cov(t, t)} = \\sqrt{e^{\\frac{-|t - t|}{\\tau}}} = \\sqrt{e^0} = 1\n",
                "\\end{align}\n",
                "\n",
                "## Part B\n",
                "\n",
                "Compute the covariance matrix of the random variables $X(1;\\omega)$ and $X(2;\\omega)$ as a function of $\\tau$. What happens when $\\tau \\rightarrow 0$?\n",
                "\n",
                "### Solution\n",
                "\n",
                "Therefore, the covariance is always 1 along the diagonal elements of the covariance matrix $\\Sigma$. Additionally, the off-diagonal elements are equal because we are taking the difference between the absolute values of $t$ and $s$. Thus, the matrix is symmetric.\n",
                "\n",
                "\\begin{align}\n",
                "\t\\Sigma_X(\\tau) = \\left[\n",
                "\t\\begin{matrix}\n",
                "\t\t1.0 & e^{\\frac{-|1-2|}{\\tau}} \\\\\n",
                "\t\te^{\\frac{-|2-1|}{\\tau}} & 1.0\n",
                "\t\\end{matrix}\\right]\n",
                "\\end{align}\n",
                "\n",
                "For $\\Sigma(\\tau \\rightarrow 0) \\rightarrow \\mathbf{I}$ where $\\mathbf{I}$ is the identity matrix.\n",
                "\n",
                "\\begin{align}\n",
                "\t\\lim_{\\tau \\rightarrow \\infty} \\Sigma_X(\\tau) = \\left[\\begin{matrix} 1 & 0 \\\\ 0 & 1 \\end{matrix}\\right] = \\mathbf{I}\n",
                "\\end{align}\n",
                "\n",
                "## Part C\n",
                "\n",
                "Plot a few samples of $X(t;\\omega)$ for $\\tau = 0.02$ and $\\tau = 1$ on a temporal with $5000$ points in [0, 5] (two different figures). Show that such sample paths are approximately within $\\mu(t) \\pm 2\\sigma(t)$, where $\\sigma(t)$ is the standard deviation of the process.\n",
                "\n",
                "### Solution\n",
                "\n",
                "First, we define a 1D grid for time from 0 to 5, equally spaced with 5000 points. We then define the functions for the mean and covariance and construct a vector of means corresponding to each point in time. Next, we construct a covariance matrix, perform the lower triangular Cholesky factorization of that matrix, and generate a random vector.\n",
                "$$\\bar{X_i} = \\bar{\\mu}_i + \\bar{A}\\bar{\\xi}$$ where $\\xi \\sim \\mathcal{N}(0, 1)$"
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "using GLMakie\n",
                "using Distributions\n",
                "using LinearAlgebra\n",
                "using KernelDensity\n",
                "using SpecialFunctions\n",
                "\n",
                "function makefig1(τ::Float64)\n",
                "    t = LinRange(0.0, 5.0, 1000)\n",
                "    μ(t) = t*exp(sin(3*t))\n",
                "    cov(t, s) = exp((-abs(t-s)) / (τ))\n",
                "    μs = μ.(t)\n",
                "    Σ = Matrix{Float64}(undef, length(t), length(t))\n",
                "    for idx in CartesianIndices(Σ)\n",
                "        Σ[idx] = cov(t[idx.I[1]], t[idx.I[2]])\n",
                "    end\n",
                "    A = cholesky(Σ).L\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1])\n",
                "    for i in 1:5\n",
                "        Xi = μs .+ A*randn(length(t))\n",
                "        lines!(t, Xi)\n",
                "    end\n",
                "    lines!(ax, t, μs, color = :red, label = \"μ\")\n",
                "    lines!(ax, t, (μs .+ 2),\n",
                "           color = :black,\n",
                "           linestyle = :dash)\n",
                "    lines!(ax, t, (μs .+ -2),\n",
                "           color = :black,\n",
                "           linestyle = :dash,\n",
                "           label = \"μ ± 2\")\n",
                "    Legend(fig[1, 2], ax)\n",
                "    save(\"question1c_$τ.png\", fig)\n",
                "end\n",
                "makefig1(0.02);\n",
                "makefig1(1.0);"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "::: {layout=\"[1, 1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "  ![$\\tau = 0.02$](question1c_0.02.png){#fig-image1 width=\"105%\"}\n",
                "\n",
                "  ![$\\tau = 1.0$](question1c_1.0.png){#fig-image2 width=\"105%\"}\n",
                ":::\n",
                "\n",
                "# Question 2\n",
                "\n",
                "Show that the sequence of numbers $\\{U_k\\}$ defined as\n",
                "\n",
                "$$U_k = \\frac{(\\hat{X}_k - \\hat{Y}_k) \\quad \\mod m_1}{m_1 + 1}$$ where\n",
                "\\begin{align}\\hat{X}_k =\n",
                "\t\\begin{cases}\n",
                "\t\tX_k & \\text{if} \\quad X_k \\geq 0 \\\\\n",
                "\t\tX_k - m_1 X_k & \\text{if} \\quad X_k < 0\n",
                "\t\\end{cases} & \\quad\t\\hat{Y}_k =\n",
                "\t\\begin{cases}\n",
                "\t\tY_k & \\text{if} \\quad Y_k \\geq 0 \\\\\n",
                "\t\tY_k - m_2 Y_k & \\text{if} \\quad Y_k < 0\n",
                "\t\\end{cases}\n",
                "\\end{align}\n",
                "\n",
                "\\begin{align}\n",
                "\tX_k = (1403580X_{k-2} - 810728X_{k-3}) \\quad \\mod m_1 \\\\\n",
                "\tY_k = (527612Y_{k-1} - 1370589Y_{k-3}) \\quad \\mod m_2\n",
                "\\end{align}\n",
                "\n",
                "Let $m_1 = 2^{32} - 209$, $m_2 = 2^{32} - 22853$, and $$X_{-3} = X_{-2} = X_{-1} = Y_{-3} = Y_{-2} = Y_{-1} = 111$$ is approximately uniformly distributed in [0, 1]. To this end, generate $N = 10^6$ numbers $U_j$ where $j = 1, 2, ..., N$ and plot the histogram of relative frquencies approximateing the PDF in [0, 1].\n",
                "\n",
                "### Solution\n",
                "\n",
                "Code that produces a vector of Float64 values of length $N$ from the seed $111$. We use the modulo function included in Julia Base."
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function MRG32k3a(seed::Integer, N::Integer)\n",
                "    m₁ = 2.0^32 - 209\n",
                "    m₂ = 2.0^32 - 22853\n",
                "\n",
                "    X = Vector{Float64}(undef, N+3)\n",
                "    Y = Vector{Float64}(undef, N+3)\n",
                "\n",
                "    for i = 1:3\n",
                "        X[i] = Float64(seed)\n",
                "        Y[i] = Float64(seed)\n",
                "    end\n",
                "\n",
                "    for j in 1:length(X) - 3\n",
                "        X[j+3] = mod(1403580*X[j+1] - 810728*X[j], m₁)\n",
                "        Y[j+3] = mod(527642*Y[j+2] - 1370589*Y[j], m₂)\n",
                "    end\n",
                "\n",
                "    transformX(Xk::Float64) = Xk ≥ 0 ? Xk : Xk - m₁*Xk\n",
                "    transformY(Yk::Float64) = Yk ≥ 0 ? Yk : Yk - m₂*Yk\n",
                "\n",
                "    Xhat = transformX.(X)\n",
                "    Yhat = transformY.(Y)\n",
                "\n",
                "    Uk = Vector{Float64}(undef, N)\n",
                "    for i in eachindex(Xhat)\n",
                "        if i > length(Xhat) - 3\n",
                "            break\n",
                "        end\n",
                "        Uk[i] = mod(Xhat[i+3] - Yhat[i+3], m₁) / (m₁ + 1)\n",
                "    end\n",
                "    Uk\n",
                "end\n",
                "\n",
                "function question2()\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "        title = \"Relative frequencies of Uⱼ for N = 10⁶\",\n",
                "        xlabel = \"Uⱼ\",\n",
                "        ylabel = \"frequency\"\n",
                "    )\n",
                "    hist!(ax, MRG32k3a(111, 1000000), bins = 80)\n",
                "    save(\"question2.png\", fig)\n",
                "end\n",
                "question2();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![Histogram of relative frequencies of $10^6$ samples using the MRG32k3a algorithm](question2.png){#fig-image3 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "# Question 3\n",
                "\n",
                "Consider the stochastic differential equation (SDE)\n",
                "\n",
                "$$dX(t;\\omega) = -X(t;\\omega)^3 dt + \\frac{1}{2} dW(t;\\omega) \\quad X(0;\\omega) = X_0(\\omega)$${#eq-SDE}\n",
                "\n",
                "where $W(t;\\omega)$ is a Wiener process, and $X_0(\\omega)$ is a uniformly distributed random variable in [1, 2]. Let us discretize (@eq-SDE) with the Euler-Maruyama scheme,\n",
                "\n",
                "$$X_{k+1} = X_k - X_k^3 \\Delta t + \\frac{1}{2} \\Delta W_k$${#eq-Euler-M}\n",
                "\n",
                "where $X_k = X(t_k;\\omega)$, $\\Delta t = t_{k+1} - t_k$ and $\\{\\Delta W_k\\}$ are i.i.d. Gaussian random variables with zero mean and variance $\\Delta t$.\n",
                "\n",
                "## Part A\n",
                "\n",
                "Write the Fokker-Planck (FKP) equation corresponding to the SDE ().\n",
                "\n",
                "### Solution\n",
                "\n",
                "From course notes 3, we know that the Fokker-Planck equation to the general SDE\n",
                "\n",
                "\\begin{align}\n",
                "\tdX_t = m(X_t, t)dt + s(X_t, t)dW_t \\quad X(0) = X_0\n",
                "\\end{align}\n",
                "\n",
                "is\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial p(x, t)}{\\partial t} + \\frac{\\partial}{\\partial x} \\left[m(x, t)p(x, t)\\right] = \\frac{1}{2} \\frac{\\partial^2}{\\partial x^2} \\left[s(x, t)^2p(x, t)\\right]\n",
                "\\end{align}\n",
                "\n",
                "for equation (@eq-SDE) we can see the $m(x, t) = -X_t^3$ and $s(x, t) = \\frac{1}{2}$, thus the Fokker-Plank equation for (@eq-SDE) is\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial p}{\\partial t} + \\frac{\\partial}{\\partial x} \\left[-x^3 p(x, t)\\right] = \\frac{1}{8} \\frac{\\partial^2p}{\\partial x^2}\n",
                "\\end{align}\n",
                "\n",
                "## Part B\n",
                "\n",
                "Using the FKP equation show that there exists a statistically stationary solution and compute the PDF $p^*(x)$ of such a stationary solution analytically. Is the equilibrium distribution $p^*(x)$ Gaussian?\n",
                "\n",
                "\\small Hint: To compute a stationary solution to the Fokker-Planck equation, set the time derivative $\\frac{\\partial p}{\\partial t} = 0$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "We are left to solve the following DE:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial}{\\partial x} \\left( x^3 p + \\frac{1}{8} \\frac{\\partial p}{\\partial x}\\right) &= 0 \\\\\n",
                "\tx^3 p + \\frac{1}{8} \\frac{\\partial p}{\\partial x} &= 0 \\\\\n",
                "\t8 \\int x^3 dx &= - \\int \\frac{1}{p} dp\\\\\n",
                "\t2x^4 &= -\\ln{p} + k\\\\\n",
                "\tp(x) &= ke^{-2x^4}\n",
                "\\end{align}\n",
                "\n",
                "We need to find a scaling constant $k$ for the pdf $p(x, t)$ such that when you integrate from $[-\\infty, \\infty]$ you get $1$.\n",
                "\n",
                "\\begin{align}\n",
                "\tk\\int_{-\\infty}^{\\infty} e^{-2x^4}dx &= 1\n",
                "\\end{align}\n",
                "\n",
                "Notice the function is even and thus we can write the integral as such:\n",
                "\n",
                "\\begin{align}\n",
                "\t2k\\int_{0}^{\\infty} e^{-2x^4}dx &= 1 \\quad \\begin{cases} u &= x^4 \\rightarrow u^{-\\frac{3}{4}} = x^{-3}\\\\ \\frac{du}{dx} &= 4x^3 \\\\ \\frac{1}{4}u^{-\\frac{3}{4}}du &= dx\\end{cases} \\\\\n",
                "\t\\frac{K}{2} \\int_0^{\\infty} e^{-2u}u^{\\frac{1}{4} -1} du &= 1 \\quad \\begin{cases}\\xi &= 2u \\\\ \\frac{d\\xi}{2} &= du\\end{cases} \\\\\n",
                "\t\\frac{K}{4} \\int_0^{\\infty} e^{-\\xi} \\left(\\frac{\\xi}{2}\\right)^{-\\frac{3}{4}} d\\xi &= 1\\\\\n",
                "\t\\frac{2^{\\frac{3}{4}}K}{4} \\int_0^{\\infty} e^{-\\xi} \\xi^{\\frac{1}{4} - 1} d\\xi\n",
                "\\end{align}\n",
                "\n",
                "The Gamma function is $$\\Gamma(z) = \\int_0^{\\infty} e^{-\\xi}\\xi^{z-1}d\\xi$$\n",
                "\n",
                "Solving for $K$ we have\n",
                "\\begin{align}\n",
                "\tK\\frac{\\Gamma\\left(\\frac{1}{4}\\right)}{2\\sqrt[4]{2}} &= 1\\\\\n",
                "\tK &= \\frac{2\\sqrt[4]{2}}{\\Gamma\\left(\\frac{1}{4}\\right)}\n",
                "\\end{align}\n",
                "\n",
                "The PDF $p^*(x)$ is thus,\n",
                "\n",
                "$$p^*(x) = \\frac{2\\sqrt[4]{2}}{\\Gamma\\left(\\frac{1}{4}\\right)}e^{-2x^4}$$"
            ]
        },
        {
            "id": "6",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "p(x) = (2^(7/8) / gamma(1/4)) * exp(-2*x^4)\n",
                "function question3c()\n",
                "    x = LinRange(-2, 2, 1000)\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "              title = L\"$p^*(x)=\\frac{2^{\\frac{7}{8}}}{\\Gamma\\left(\\frac{1}{4}\\right)}e^{-2x^4}$\",\n",
                "              xlabel = L\"$x$\",\n",
                "              ylabel = L\"$p^*(x)$\")\n",
                "    lines!(ax, x, p.(x))\n",
                "    save(\"question3c.png\", fig)\n",
                "end\n",
                "question3c();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "7",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![The pdf](question3c.png){#fig-image4 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "We can see that the pdf is non-gaussian. A gaussian distribution is of the form $f(x) = e^{-x^2}$.\n",
                "\n",
                "## Part C\n",
                "\n",
                "Write the conditional transition density $p(x_{k+1}|x_k)$ defined by discrete Markov process (@eq-Euler-M). Does the functional form of the transition density depend on the particular time $t_k$? Or is it the same for all times?\n",
                "\n",
                "### Solution\n",
                "\n",
                "We know that the Wiener process is a gaussian random variable with zero mean and variance $\\Delta t$. For equation (@eq-Euler-M) we have $Var(\\frac{1}{2} \\Delta W_k) = \\frac{1}{4}\\Delta t$.\n",
                "\n",
                "By the property that the sum of a constant and a gaussian random variable is still a gaussian with a shifted mean, we can see that if the current state $X_k = x$, the next state $X_{k+1}$ is\n",
                "\n",
                "\\begin{align}\n",
                "\tX_{k+1} = x - x^3 \\Delta t + \\frac{1}{2} \\Delta W_k\n",
                "\\end{align}\n",
                "\n",
                "Thus\n",
                "\n",
                "\\begin{align}\n",
                "\tX_{k+1} | X_k = x \\sim \\mathcal{N}(x-x^3 \\Delta t, \\frac{1}{4} \\Delta t)\n",
                "\\end{align}\n",
                "\n",
                "From this we can explicitly write out the conditional transition density $p(x_{k+1} | x_k)$. Let $X_{k+1} = y$ and $X_k = x$\n",
                "\n",
                "\\begin{align}\n",
                "\tp(y | x) = \\frac{2}{\\sqrt{2 \\pi \\Delta t}}e^{-\\frac{2(y - x + x^3 \\Delta t)^2}{\\Delta t}}\n",
                "\\end{align}\n",
                "\n",
                "The functional form of the transition density only depends on $\\Delta t$, which is constant for all time.\n",
                "\n",
                "## Part D\n",
                "\n",
                "By using numerical integration show that the PDF $p^*(x)$ of the statistical steady state you computed in part b is a solution to the fixed point problem\n",
                "\n",
                "$$p^*(x) = \\int_{-\\infty}^{\\infty} p(x|y)p^*(y)dy$${#eq-Volterra}\n",
                "\n",
                "where $p(x|y)$ is the transition density you computed in part c. Given that $p^*(y)$ decays quite fast, for numerical purposes it is sufficient to approximate the infinite domain of the integral (@eq-Volterra) to [-5, 5].\n",
                "\n",
                "### Solution\n",
                "\n",
                "## Part E\n",
                "\n",
                "Plot a few sample paths of the SDE for $\\Delta = 10^{-4}$ for $t \\in [0, 5]$.\n",
                "\n",
                "### Solution"
            ]
        },
        {
            "id": "8",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function question3partE()\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:5.0\n",
                "    N = 5\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    procs = Matrix{Float64}(undef, length(ts), N)\n",
                "    for i in 1:N\n",
                "        procs[1, i] = rand() + 1.0\n",
                "    end\n",
                "\n",
                "    for i in 1:N\n",
                "        for j in 2:length(ts)\n",
                "            procs[j, i] = procs[j-1, i] - (procs[j-1, i]^3)*Δt + 0.5*rand(W)\n",
                "        end\n",
                "    end\n",
                "\n",
                "    fig = Figure()\n",
                "    ax = Axis(fig[1, 1],\n",
                "        title = L\"$X_{k+1} = X_k - X_k^3 \\Delta t + \\frac{1}{2} \\Delta W_k$\",\n",
                "        xlabel = \"x\")\n",
                "    for i in 1:N\n",
                "        lines!(ax, ts, procs[:, i])\n",
                "    end\n",
                "    save(\"question3e.png\", fig)\n",
                "end\n",
                "question3partE();"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "9",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "::: {layout=\"[1]\" fig-cap=\"\" fig-pos=\"H\"}\n",
                "![5 sample paths of the SDE for $\\Delta = 10^{-4}$ for $t \\in [0, 5]$](question3e.png){#fig-image4 width=\"75%\"}\n",
                ":::\n",
                "\n",
                "## Part F\n",
                "By computing a sufficiently large number of sample paths, Estimate the PDF of $X(t;\\omega)$ numerically (e.g. by using a kernel density PDF estimator or method of relative frequencies) at different times and show that it converges to the steady state PDF you computed in part b.\n",
                "\n",
                "### Solution"
            ]
        },
        {
            "id": "10",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "#| eval: false\n",
                "function question3partF()\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:5.0\n",
                "    N = 200\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    procs = Matrix{Float64}(undef, length(ts), N)\n",
                "    println(\"initializing matrix with uniform random numbers in [1, 2]\")\n",
                "    for i in 1:N\n",
                "        procs[1, i] = rand() + 1.0\n",
                "    end\n",
                "    println(\"simulating random process\")\n",
                "    for i in 1:N\n",
                "        println(\"$N complete\")\n",
                "        for j in 2:length(ts)\n",
                "            procs[j, i] = procs[j-1, i] - (procs[j-1, i]^3)*Δt + 0.5*rand(W)\n",
                "        end\n",
                "    end\n",
                "\n",
                "    fig = Figure();display(fig)\n",
                "    ax1 = Axis(fig[1, 1],\n",
                "    title = \"$N SDE paths\")\n",
                "    ax2 = Axis(fig[1, 2],\n",
                "        title = \"KDE Density\")\n",
                "    x = LinRange(-5, 5, 1000)\n",
                "    xlims!(ax2, -5, 5)\n",
                "    for i in 1:N\n",
                "        lines!(ax1, ts, procs[:, i], linewidth = 1)\n",
                "    end\n",
                "    d = kde(procs[1, :])\n",
                "    vlinet = Observable(ts[1])\n",
                "    kde_data = Observable((d.x, d.density))\n",
                "    kde_line = lines!(ax2, [0.0], [0.0], color = :blue, label = \"KDE\")\n",
                "\n",
                "    kde_plot = lift(kde_data) do (x, density)\n",
                "        kde_line[1] = x\n",
                "        kde_line[2] = density\n",
                "    end\n",
                "\n",
                "    vlines!(ax1, vlinet, color = :red, label = \"time\")\n",
                "    lines!(ax2, x, p.(x), color = :red, linestyle = :dash, label = L\"$p^*(x)$\")\n",
                "    Legend(fig[2, 1], ax1, orientation = :horizontal)\n",
                "    Legend(fig[2, 2], ax2, orientation = :horizontal)\n",
                "    println(\"starting video rendering...\")\n",
                "    record(fig, \"question3partF.mp4\", 2:100:length(ts); framerate = 30) do k\n",
                "        println(\"frame $k\")\n",
                "        vlinet[] = ts[k]\n",
                "        d = kde(procs[k, :])\n",
                "        kde_data[] = (d.x, d.density)\n",
                "    end\n",
                "end\n",
                "question3partF()"
            ],
            "outputs": [
            ],
            "execution_count": 0
        },
        {
            "id": "11",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "<video width=\"700\" autoplay loop muted>\n",
                "  <source src=\"question3partF.mp4\" type=\"video/mp4\">\n",
                "  Your browser does not support the video tag.\n",
                "</video>"
            ]
        }
    ],
    "timestamp": "2025-07-09T12:49:07.078",
    "file": "/home/kevinsilberberg/Repos/paxnomada/courses/AM238/docs/hw3/hw3.qmd",
    "qnr_schema_version": "1.0.0"
}