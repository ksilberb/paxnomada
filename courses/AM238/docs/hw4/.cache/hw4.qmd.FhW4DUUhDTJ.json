{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: Homework 4\n",
                "date: 2024-11-07\n",
                "author:\n",
                "  - name: Kevin Silberberg\n",
                "    id: ks\n",
                "    orcid: 0009-0009-4825-1865\n",
                "    email: ksilberb@ucsc.edu\n",
                "    affiliation:\n",
                "      - name: University of California Santa Cruz\n",
                "        city: Santa Cruz\n",
                "        state: CA\n",
                "        href: https://www.ucsc.edu\n",
                "engine: julia-1.11\n",
                "julia:\n",
                "  exeflags: [\"--project=/home/kevinsilberberg/Repos/paxnomada/courses/uncertainty_quant/\"]\n",
                "execute:\n",
                "  daemon: true\n",
                "  cache: true\n",
                "  eval: true\n",
                "  freeze: auto\n",
                "---\n",
                "\n",
                "# Question 1\n",
                "\n",
                "Consider the system of SDEs \\footnotemark\n",
                "\n",
                "\\begin{equation}\\tag{1}\\label{eq:SDE}\n",
                "\t\\begin{cases}\n",
                "\t\tdX(t;\\omega) &= -X(t;\\omega)^3dt + dY(t;\\omega) \\\\\n",
                "\t\tdY(t;\\omega) &= -\\tau Y(t;\\omega)dt + \\sigma dW(t;\\omega)\n",
                "\t\\end{cases}\n",
                "\\end{equation}\n",
                "\n",
                "where $\\sigma, \\tau \\leq 0$ are given parameters and $W(t;\\omega)$ is a Wiener process. The initial condition $(X(0;\\omega), Y(0;\\omega))$ has i.i.d. components both of which are uniformly distributed in $[0, 1]$, i.e., $X(0;\\omega)$ and $Y(0;\\omega)$ are independent random variables with uniform PDF in $[0,1]$.\n",
                "\n",
                "\\footnotetext{The system \\eqref{eq:SDE} is a prototype IVP where $X(t;\\omega)$ is driven by the Ornstein-Uhlenbeck process $Y(t;\\omega)$, which is a colored (non-white) random noise with exponential correlation function.}\n",
                "## Part A\n",
                "\n",
                "Plot a few sample paths of $X(t;\\omega)$ for $\\sigma = 0.1$ and $\\tau = \\{0.01, 1, 10\\}$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "We convert \\eqref{eq:SDE} into a numerical simulation by first converting the SDE into a discrete time form via the Euler-Maruyama discretization.\n",
                "\n",
                "We descritize a grid within the interval [0, T] into N equal parts, where $\\Delta t = \\frac{T}{N}$\n",
                "\n",
                "Let us recursively define $Y_n$ for $0 \\leq n \\leq N-1$\n",
                "\n",
                "\\begin{align}\n",
                "\tY_{n+1} = Y_n  -\\tau Y_n \\Delta t + \\sigma \\Delta W\n",
                "\\end{align}\n",
                "\n",
                "and $X_n$\n",
                "\n",
                "\\begin{align}\n",
                "\tX_{n+1} = X_n - X_n^3 \\Delta t + \\Delta Y_n\n",
                "\\end{align}\n",
                "\n",
                "where $\\Delta Y_n = Y_{n+1} - Y_n = -\\tau Y_n \\Delta t + \\sigma \\Delta W_n$\n",
                "\n",
                "where $\\Delta W_n$ are i.i.d Gaussian random variables with zero mean and variance $\\Delta t$."
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "using GLMakie\n",
                "using Distributions\n",
                "\n",
                "function partA(τ::Float64, σ::Float64)\n",
                "    # define the length of subintervals\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:5.0\n",
                "    # number of samples\n",
                "    N = 5\n",
                "    # Weiner processs\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    # initialize mesh\n",
                "    X = Matrix{Float64}(undef, length(ts), N)\n",
                "    Y = Matrix{Float64}(undef, length(ts), N)\n",
                "\n",
                "    # apply initial conditions\n",
                "    for i in 1:N\n",
                "        X[1, i] = rand()\n",
                "        Y[1, i] = rand()\n",
                "    end\n",
                "    # propagate the process\n",
                "    for i in 1:N\n",
                "        for j in 2:length(ts)\n",
                "            ΔW = rand(W)\n",
                "            X[j, i] = X[j-1, i] - (X[j-1, i]^3)*Δt -τ*Y[j-1, i]*Δt + σ*ΔW\n",
                "            Y[j, i] = Y[j-1, i] - τ*Y[j-1, i]*Δt + σ*ΔW\n",
                "        end\n",
                "    end\n",
                "    # make the figure\n",
                "    fig = Figure()\n",
                "    ax = Axis(\n",
                "        fig[1, 1],\n",
                "        title = \"σ = $σ τ = $τ\",\n",
                "        xlabel = \"t\",\n",
                "        ylabel = L\"$X_{n+1}$\"\n",
                "    )\n",
                "    # set y axis limits\n",
                "    ylims!(ax, -1.0, 1.0)\n",
                "\n",
                "    # Plot the samples\n",
                "    for i in 1:N\n",
                "        lines!(ax, ts, X[:, i])\n",
                "    end\n",
                "    return fig\n",
                "end\n",
                "save(\"parta01.png\", partA(0.01, 0.1))\n",
                "save(\"parta1.png\", partA(1.0, 0.1))\n",
                "save(\"parta10.png\", partA(10.0, 0.1))"
            ],
            "outputs": [
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                ":::: {.columns}\n",
                "\n",
                "::: {.column width=\"33.33%\"}\n",
                "![$\\tau = 0.01$](parta01.png){width=100%}\n",
                ":::\n",
                "\n",
                "::: {.column width=\"33.33%\"}\n",
                "![$\\tau = 1.0$](parta1.png){width=100%}\n",
                ":::\n",
                "\n",
                "::: {.column width=\"33.33%\"}\n",
                "![$\\tau = 10.0$](parta10.png){width=100%}\n",
                ":::\n",
                "\n",
                "::::\n",
                "\n",
                "## Part B\n",
                "\n",
                "Do you expect the system \\eqref{eq:SDE} to have a statistically stationary state? Justify your answer.\n",
                "\n",
                "### Solution\n",
                "\n",
                "From part A, we can see that as we increase $\\tau$, the system rapidly converges to a statistically steady-state process. We can prove this by the Kernel Density Estimation for 1000 sample paths for varying $\\tau$ and comparing the estimated PDF for later times.\n",
                "\n",
                "The solution approaches a statistically steady state as $t\\rightarrow \\infty$ and approaches the statisically steady state at the rate $\\tau$. It seems though that the pdf for varying $\\tau$ may not be the same, as $\\tau = 10.0$ seems to have a bimodal distribution for later times."
            ]
        },
        {
            "id": "4",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "using KernelDensity\n",
                "\n",
                "function simulateB(τ::Float64)\n",
                "    σ = 0.1\n",
                "    # define the length of subintervals\n",
                "    Δt = 1e-4\n",
                "    ts = 0.0:Δt:20.0\n",
                "    # number of samples\n",
                "    N = 1000\n",
                "    # Weiner processs\n",
                "    W = Normal(0, sqrt(Δt))\n",
                "    # initialize mesh\n",
                "    X = Matrix{Float64}(undef, length(ts), N)\n",
                "    Y = Matrix{Float64}(undef, length(ts), N)\n",
                "\n",
                "    # apply initial conditions\n",
                "    for i in 1:N\n",
                "        X[1, i] = rand()\n",
                "        Y[1, i] = rand()\n",
                "    end\n",
                "    # propagate the process\n",
                "    for i in 1:N\n",
                "        for j in 2:length(ts)\n",
                "            ΔW = rand(W)\n",
                "            X[j, i] = X[j-1, i] - (X[j-1, i]^3)*Δt -τ*Y[j-1, i]*Δt + σ*ΔW\n",
                "            Y[j, i] = Y[j-1, i] - τ*Y[j-1, i]*Δt + σ*ΔW\n",
                "        end\n",
                "    end\n",
                "    return X, Y, length(ts)\n",
                "end\n",
                "\n",
                "function partB()\n",
                "    X1, Y1, ts = simulateB(0.01)\n",
                "    X2, Y2, _ = simulateB(1.0)\n",
                "    X3, Y3, _ = simulateB(10.0)\n",
                "\n",
                "    fig = Figure()\n",
                "    ax = Axis(\n",
                "        fig[1, 1]\n",
                "    )\n",
                "    ylims!(ax, 0.0, 3.0)\n",
                "    xlims!(ax, -2.0, 2.0)\n",
                "\n",
                "    d1 = kde(X1[1, :])\n",
                "    d2 = kde(X2[1, :])\n",
                "    d3 = kde(X3[1, :])\n",
                "    kde_data1 = Observable((d1.x, d1.density))\n",
                "    kde_data2 = Observable((d2.x, d2.density))\n",
                "    kde_data3 = Observable((d3.x, d3.density))\n",
                "\n",
                "    kde_line1 = lines!(ax, [0.0], [0.0], color = :red, label = \"τ = 0.01\")\n",
                "    kde_line2 = lines!(ax, [0.0], [0.0], color = :blue, label = \"τ = 1.0\")\n",
                "    kde_line3 = lines!(ax, [0.0], [0.0], color = :green, label = \"τ = 10.0\")\n",
                "\n",
                "    kde_plot1 = lift(kde_data1) do (x, density)\n",
                "        kde_line1[1] = x\n",
                "        kde_line1[2] = density\n",
                "    end\n",
                "    kde_plot2 = lift(kde_data2) do (x, density)\n",
                "        kde_line2[1] = x\n",
                "        kde_line2[2] = density\n",
                "    end\n",
                "    kde_plot3 = lift(kde_data3) do (x, density)\n",
                "        kde_line3[1] = x\n",
                "        kde_line3[2] = density\n",
                "    end\n",
                "\n",
                "    Legend(fig[1, 2], ax)\n",
                "    record(fig, \"partb.mp4\", 2:400:ts; framerate = 30) do k\n",
                "        d1 = kde(X1[k, :])\n",
                "        d2 = kde(X2[k, :])\n",
                "        d3 = kde(X3[k, :])\n",
                "        kde_data1[] = (d1.x, d1.density)\n",
                "        kde_data2[] = (d2.x, d2.density)\n",
                "        kde_data3[] = (d3.x, d3.density)\n",
                "    end\n",
                "    return fig\n",
                "end\n",
                "partB()"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "image/png": "",
                        "text/html": "<img width=672 height=480 style='object-fit: contain; height: auto;' src=\"data:image/png;base64, \"/>"
                    },
                    "metadata": {
                        "image/png": {
                            "width": 672,
                            "height": 480
                        }
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "5",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "\n",
                "<video width=\"700\" autoplay loop muted>\n",
                "\t<source src=\"partb.mp4\" type=\"video/mp4\">\n",
                "</video>\n",
                "\n",
                "## Part C\n",
                "\n",
                "Write the Fokker-Planck equation for the joint PDF of $X(t;\\omega)$ and $Y(t;\\omega)$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "Let us write \\eqref{eq:SDE} in state-space form\n",
                "\n",
                "\\begin{align}\n",
                "\tdX &= -X^3 dt - \\tau Y dt + \\sigma dW \\\\\n",
                "\tdY &= -\\tau Y dt + \\sigma dW\n",
                "\\end{align}\n",
                "\n",
                "The vector $\\mathbf{G}(\\mathbf{X}, t)$ can be written as\n",
                "\n",
                "\\begin{align}\n",
                "\t \\mathbf{G}(\\mathbf{X}, t) &= \\left[\n",
                "\t \\begin{matrix}\n",
                "\t\t -X^3 - \\tau Y \\\\\n",
                "\t\t -\\tau Y\n",
                "\t \\end{matrix}\\right]\n",
                "\\end{align}\n",
                "\n",
                "The matrix $\\mathbf{S}$ can be written as\n",
                "\n",
                "\\begin{align}\n",
                "\t\\mathbf{S} = \\left[\n",
                "\t\\begin{matrix}\n",
                "\t\t\\sigma \\\\\n",
                "\t\t\\sigma\n",
                "\t\\end{matrix}\\right]\n",
                "\\end{align}\n",
                "\n",
                "We can thus write the Fokker-Planck equation according equation 59 in course notes 4 as follows:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\frac{\\partial p(\\mathbf{x}, t)}{\\partial t} &= -\\sum_{k=1}^{2} \\frac{\\partial}{\\partial x_k} \\left(G_k(\\mathbf{x}, t) p(\\mathbf{x})\\right) + \\frac{1}{2} \\sum_{i, k = 1}^2 \\frac{\\partial^2}{\\partial x_i \\partial x_k}\\left(\\sum_{j=1}^2 S_{ij}(\\mathbf{x}, t)S_{kj}(\\mathbf{x}, t) p(\\mathbf{x}, t) \\right) \\\\\n",
                "\\frac{\\partial p}{\\partial t} &= -\\left(\\frac{\\partial}{\\partial x} \\left((-x^3 -\\tau y)p\\right) + \\frac{\\partial}{\\partial y}\\left(-\\tau yp\\right)\\right) + \\frac{\\sigma^2}{2}\\left(\\frac{\\partial^2p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2}\\right) \\\\\n",
                "&= \\frac{\\partial}{\\partial x}(x^3 p) + \\tau p + \\tau y\\left(\\frac{\\partial p}{\\partial x} + \\frac{\\partial p}{\\partial y}\\right) + \\frac{\\sigma^2}{2}\\left(\\frac{\\partial^2p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2}\\right)\n",
                "\\end{align}\n",
                "\n",
                "The Fokker-Planck equation is thus\n",
                "\n",
                "\\begin{equation}\\tag{2}\\label{eq:fokker-planck}\n",
                "\\frac{\\partial p(x, y, t)}{\\partial t} = \\frac{\\partial}{\\partial x}(x^3 p(x, y, t)) + \\tau p(x, y, t) + \\tau y\\left(\\frac{\\partial p(x, y, t)}{\\partial x} + \\frac{\\partial p(x, y, t)}{\\partial y}\\right) + \\frac{\\sigma^2}{2}\\left(\\frac{\\partial^2p(x, y, t)}{\\partial x^2} + \\frac{\\partial^2 p(x, y, t)}{\\partial y^2}\\right)\n",
                "\\end{equation}\n",
                "\n",
                "where $p(x, y, t)$ is the joint PDF of $X$ and $Y$.\n",
                "\n",
                "\n",
                "## Part D\n",
                "\n",
                "Write the reduced-order equation for the joint PDF of $X(t;\\omega)$ in terms of the conditional expectation $\\mathbb{E}\\{Y(t;\\omega)|X(t;\\omega)\\}$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "To obtain the reduced-order equation, let us integrate \\eqref{eq:fokker-planck} with respect to $y$ and use the definition of conditional PDF.\n",
                "\n",
                "\\begin{align}\n",
                "\\frac{\\partial}{\\partial t}\\int_{-\\infty}^{\\infty}pdy &= \\int_{-\\infty}^{\\infty}\\left(\\frac{\\partial}{\\partial x} \\left((x^3 +\\tau y)p\\right) + \\frac{\\partial}{\\partial y}\\left(\\tau yp\\right) + \\frac{\\sigma^2}{2}\\left(\\frac{\\partial^2p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial y^2}\\right)\\right) dy\\\\\n",
                "\\frac{\\partial p(x,t)}{\\partial t} &= \\frac{\\partial}{\\partial x} \\int_{-\\infty}^{\\infty}(x^3 + \\tau y)p dy + \\int_{-\\infty}^{\\infty} \\frac{\\partial}{\\partial y}(\\tau yp)dy + \\frac{\\sigma^2}{2}\\left(\\frac{\\partial^2}{\\partial x^2}\\int_{-\\infty}^{\\infty}p dy + \\cancelto{0}{\\int_{-\\infty}^{\\infty}\\frac{\\partial^2 p}{\\partial y^2}dy}\\right) \\\\\n",
                "&= \\frac{\\partial}{\\partial x}\\left(x^3p(x, t) + \\tau p(x, t)\\mathbb{E}\\{Y | X\\}\\right) + \\cancelto{0}{\\tau y p_{\\bigg{|}_{-\\infty}^{\\infty}}} + \\frac{\\sigma^2}{2}\\frac{\\partial^2 p(x, t)}{\\partial x^2}\\\\\n",
                "\\end{align}\n",
                "\n",
                "Thus, the reduced order equation for the joint PDF can be written as,\n",
                "\n",
                "\\begin{equation}\\tag{3}\\label{eq:reduced-order}\n",
                "\t\\frac{\\partial p(x, t)}{\\partial t} = \\frac{\\partial}{\\partial x}(x^3 p(x, t)) + \\tau \\frac{\\partial}{\\partial x}\\left(p(x, t)\\mathbb{E}\\{y|x\\}\\right) + \\frac{\\sigma^2}{2} \\frac{\\partial^2 p(x, t)}{\\partial x^2}\n",
                "\\end{equation}\n",
                "\n",
                "## Part E\n",
                "\n",
                "Set $\\sigma = 0$. Compute the conditional expectation $\\mathbb{E}\\{Y(t;\\omega) | X(t;\\omega)\\}$ explicity as a function of\n",
                "$t$ and substitute it in the reduced order equation you obtained in part d (with $\\sigma = 0$) to obtain an exact (and closed) equation for the PDF of $X(t;\\omega)$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "Recall the orginal SDE \\eqref{eq:SDE} where\n",
                "\n",
                "\\begin{align}\n",
                "\tdY = -\\tau Y dt + \\sigma dW\n",
                "\\end{align}\n",
                "\n",
                "setting $\\sigma = 0$ we have the following ODE:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\begin{cases}\n",
                "\t\t\\frac{dY}{dt} = -\\tau Y \\\\\n",
                "\t\tY(0) \\sim \\text{Uniform}(0, 1)\n",
                "\t\\end{cases}\n",
                "\\end{align}\n",
                "\n",
                "solving for $Y(t)$ we have:\n",
                "\n",
                "\\begin{align}\n",
                "\tY(t) = Y(0)e^{-\\tau t}\n",
                "\\end{align}\n",
                "\n",
                "where $Y(0)$ can be expressed as the expectation of a uniform random variable in [0, 1], which we know is $\\frac{1}{2}$\n",
                "\n",
                "therefore the conditional expectation $$\\mathbb{E}\\{Y|X\\} = \\mathbb{E}\\{Y\\} = \\frac{1}{2}e^{-\\tau t}$$\n",
                "\n",
                "we can write a closed equation for the reduced order equation as follows:\n",
                "\n",
                "\\begin{equation}\\tag{4}\\label{closed-reduced}\n",
                "\\frac{\\partial p(x, t)}{\\partial t} = \\frac{\\partial }{\\partial x}(x^3p(x, t)) + \\tau \\frac{\\partial }{\\partial x}(p(x, t)\\frac{1}{2}e^{-\\tau t})\n",
                "\\end{equation}\n",
                "\n",
                "## Part F\n",
                "\n",
                "Write the PDF equation you obtained in part e as an evolution equation for the cumulative distribution function (CDF) of $X(t;\\omega)$.\n",
                "\n",
                "### Solution\n",
                "\n",
                "Recall the definition of the cumulative distribution function:\n",
                "\n",
                "\\begin{align}\n",
                "F(x, y, t) = \\int_{-\\infty}^{x}p(y, t)dy\n",
                "\\end{align}\n",
                "\n",
                "if we take the derivative on both sides with respect to $x$ we have\n",
                "\n",
                "\\begin{align}\n",
                "p(x, t) = \\frac{\\partial F(x, t)}{\\partial x}\n",
                "\\end{align}\n",
                "\n",
                "plugging this into \\eqref{closed-reduced} we have\n",
                "\n",
                "\\begin{align}\n",
                "\\frac{\\partial }{\\partial t}\\left(\\frac{\\partial F}{\\partial x}\\right) = \\frac{\\partial }{\\partial x}\\left(x^3\\frac{\\partial F}{\\partial x}\\right) + \\tau \\frac{\\partial }{\\partial x}\\left(\\frac{\\partial F}{\\partial x}\\frac{1}{2}e^{-\\tau t}\\right)\n",
                "\\end{align}\n",
                "\n",
                "taking the integral of both sides:\n",
                "\n",
                "\\begin{align}\n",
                "\t\\int_{-\\infty}^{x}\\frac{\\partial^2 F}{\\partial t\\partial x'}dx' &= \\int_{-\\infty}^{x}\\left(\\frac{\\partial }{\\partial x'}\\left(x'^3\\frac{\\partial F}{\\partial x'}\\right) + \\frac{\\tau}{2} \\frac{\\partial }{\\partial x'}\\left(\\frac{\\partial F}{\\partial x'}e^{-\\tau t}\\right)\\right)dx' \\\\\n",
                "\\frac{\\partial F(x, t)}{\\partial t} &= x'^3 \\frac{\\partial F}{\\partial x'}\\bigg|_{-\\infty}^{x} + \\frac{\\tau}{2} \\frac{\\partial F}{\\partial x'}e^{-\\tau t}\\bigg|_{-\\infty}^{x} \\\\\n",
                "\\end{align}\n",
                "\n",
                "thus we are left with the evolution equation for $F(x, t)$\n",
                "\n",
                "\\begin{equation}\\tag{5}\\label{evolutioneq}\n",
                "\\frac{\\partial F(x, t)}{\\partial t} = x^3 \\frac{\\partial F(x, t)}{\\partial x} + \\frac{\\tau}{2}e^{-\\tau t}\\frac{\\partial F(x, t)}{\\partial x}\n",
                "\\end{equation}"
            ]
        }
    ],
    "timestamp": "2025-07-07T12:46:56.386",
    "file": "/home/kevinsilberberg/Repos/paxnomada/courses/uncertainty_quant/docs/hw4/hw4.qmd",
    "qnr_schema_version": "1.0.0"
}