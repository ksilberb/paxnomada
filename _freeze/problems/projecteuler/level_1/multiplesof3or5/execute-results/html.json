{
  "hash": "4f554b0dc5f39d1c20251557152971e1",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Multiples of 3 or 5\"\nsubtitle: Problem 1\ndate: 03/10/2025\nauthor: Kevin Silberberg\nengine: julia-1.11\njulia:\n  exeflags: [\"--project=/home/kevinsilberberg/paxnomada/projecteuler/\"]\nexecute:\n  daemon: true\n  cache: true\n  freeze: auto\n---\n\n## Problem definition\n\nIf we list all the natural numbers below $10$ that are multiplies of $3$ or $5$, we get $3, 5, 6, \\text{and } 9$. The sum of these multiples is $23$.\n\nFind the sum of all the multiples of $3$ or $5$ below $1000$.\n\n## Solution\n\n### Analytical Solution\n\nLet $A \\in \\mathbb{N}$ be the set that contains all the natural numbers in the domain $[1, 1000)$ that are multiples of $3$.\n\n\\begin{align}\nA = 3, 6, 9, 12, 15, \\cdots, 999\n\\end{align}\n\nLet $B \\in \\mathbb{N}$ be the set that contains the numbers in the same domain as $A$ but that are multiples of $5$.\n\n\\begin{align}\nB = 5, 10, 15, 20, 25, \\cdots, 995\n\\end{align}\n\nEssentially what we are looking for here is the sum of all the elements contained in $A \\cup B$.\n\nBy the inclusion-exculsion principle, recall that\n\n\\begin{align}\nA \\cup B = A + B - A \\cap B\n\\end{align}\n\nso we need to find the sum of the elements contained in $A$, $B$, and the set $C = A \\cap B$ which is the set of all the numbers which are multiples of $15$.\n\n\\begin{align}\nC = 15, 30, 45, 60, \\cdots, 990\n\\end{align}\n\nFor this we can use the formulas for [Arithmetic Progression](https://en.wikipedia.org/wiki/Arithmetic_progression).\n\n\\begin{align}\n\\sum A = n \\left(\\frac{a_1 + a_n}{2}\\right)\n\\end{align}\n\nwhere $n$ is the number of terms in the sequence, $a_1$ is the first term and $a_n$ is the last term. We don't know what how many terms there are in the sequence so we can also use the *nth term formula*\n\n\\begin{align}\na_n = a_1 + \\left(n - 1\\right)d\n\\end{align}\n\nwhere $d$ is the value being added to $a_{n-1}$ to obtain $a_n$.\n\nLet us compute these sums for $A, B, C$\n\n#### A\n\nthe last term in the sequence is $999$ thus,\n\n\\begin{align}\n999 &= 3 + \\left(n - 1\\right)3\\\\\n999 &= 3n\\\\\nn &= 333\n\\end{align}\n\nhence,\n\n\\begin{align}\n\\sum A &= 333 \\left(\\frac{3 + 999}{2}\\right)\\\\\n&= 333 \\cdot \\frac{1002}{2} \\\\\n&= 166833\n\\end{align}\n\n#### B\n\nthe last term in the sequence is $995$ thus,\n\n\\begin{align}\n995 &= 5 + \\left(n - 1\\right)5\\\\\n995 &= 5n\\\\\nn &= 199\n\\end{align}\n\nhence,\n\n\\begin{align}\n\\sum B &= 199 \\left(\\frac{5 + 995}{2}\\right)\\\\\n&= 99500\n\\end{align}\n\n#### C\n\nthe last term in the sequence is $990$ thus,\n\n\\begin{align}\n990 &= 15 + \\left(n - 1\\right)15\\\\\n&= 15n\\\\\nn &= 66\n\\end{align}\n\nhence,\n\n\\begin{align}\n\\sum C &= 66 \\left(\\frac{15 + 990}{2}\\right)\\\\\n&= 66 \\cdot \\left(\\frac{1005}{2}\\right)\\\\\n&= 33165\n\\end{align}\n\nTherefore the final solution,\n\n\\begin{align}\n\\sum A \\cup B = 166833 + 99500 - 33165 = 233168\n\\end{align}\n\n### Code\n\nWe can solve the problem brute force by writing a code that computes the sum of any number in the range $[1, 1000]$ that is a multiple of $3$ or $5$.\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\nsum(x for x in 1:999 if (x % 3 == 0) || (x % 5 == 0))\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n233168\n```\n:::\n:::\n\n\n\nWe use a generator function in the call to `sum` so that we don't generate an intermediate array and then sum over the elements of the array. Instead it simply keeps a running total of the elements produced by the generator function.\n\n",
    "supporting": [
      "multiplesof3or5_files"
    ],
    "filters": [],
    "includes": {}
  }
}