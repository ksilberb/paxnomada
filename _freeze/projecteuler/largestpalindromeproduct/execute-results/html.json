{
  "hash": "c740e0d839621a82d50401f492600d74",
  "result": {
    "engine": "julia",
    "markdown": "---\nengine: julia-1.11\njulia:\n  exeflags: [\"--project=/home/kevinsilberberg/paxnomada/projecteuler/\"]\nexecute:\n  daemon: 3600\n  cache: true\n  freeze: auto\n---\n\n\n\n# Largest Palindrome Product\n\nA palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is\n\n\\begin{align}\n9009 = 91 \\times 99\n\\end{align}\n\nFind the largest palindrome made from the product of two 3-digit numbers.\n\n## Solution\n\n\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\nfunction isPalindrome(num::Int64)\n    x = Vector{Int}(undef, 18)\n    for i in eachindex(x)\n        x[i] = num % 10\n        num รท= 10\n    end\n    y = x[1:findlast(i -> i > 0, x)]\n    for i in eachindex(y)\n        if !(y[i] == y[end - i + 1])\n            return false\n        end\n    end\n    return true\nend\n\nfunction main()\n    current = 0\n    idx = (0, 0)\n    for i in 999:-1:900\n        for j in 999:-1:900\n            new = i*j\n            if (new > current && isPalindrome(new))\n                current = new\n                idx = (i, j)\n            end\n        end\n    end\n    println(\"$(current) = $(idx[1]) x $(idx[2])\")\nend\nmain()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n906609 = 993 x 913\n```\n:::\n:::\n\n\n",
    "supporting": [
      "largestpalindromeproduct_files"
    ],
    "filters": [],
    "includes": {}
  }
}