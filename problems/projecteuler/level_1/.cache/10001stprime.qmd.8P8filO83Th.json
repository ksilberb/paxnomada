{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: \"10,001st Prime\"\n",
                "subtitle: Problem 7\n",
                "date: 07/14/2025\n",
                "author: Kevin Silberberg\n",
                "engine: julia-1.11\n",
                "julia:\n",
                "  exeflags: [\"--project=/home/kevinsilberberg/paxnomada/projecteuler/\"]\n",
                "execute:\n",
                "  daemon: 3600\n",
                "  cache: true\n",
                "  freeze: auto\n",
                "---\n",
                "\n",
                "## Problem definition\n",
                "\n",
                "By listing the first six prime numbers: $2, 3, 5, 7, 11, \\text{ and } 13$, we can see that the $6$th prime is 13.\n",
                "\n",
                "What is the 10,001st prime number?\n",
                "\n",
                "## Solution\n",
                "\n",
                "We are going to implement the ancient algorithm the [sieve of Eratosthenes](https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) for finding all prime numbers up to any given limit."
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function sieve_of_erato(N::Int)\n",
                "    sieve = trues(N)\n",
                "    sieve[1] = false\n",
                "    for k in [2, 3, 5, 7]\n",
                "        l = k\n",
                "        while l â‰¤ N\n",
                "            if sieve[l]\n",
                "                sieve[l] = false\n",
                "            end\n",
                "            l += k\n",
                "        end\n",
                "    end\n",
                "    sieve[2] = true\n",
                "    sieve[3] = true\n",
                "    sieve[5] = true\n",
                "    sieve[7] = true\n",
                "    [i for i in 1:N if sieve[i]]\n",
                "end\n",
                "sieve_of_erato(30)"
            ],
            "outputs": [
                {
                    "output_type": "execute_result",
                    "execution_count": 1,
                    "data": {
                        "text/plain": "10-element Vector{Int64}:\n  2\n  3\n  5\n  7\n 11\n 13\n 17\n 19\n 23\n 29"
                    },
                    "metadata": {
                    }
                }
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        }
    ],
    "timestamp": "2025-07-14T11:47:30.969",
    "file": "/home/kevinsilberberg/Repos/paxnomada/problems/projecteuler/level_1/10001stprime.qmd",
    "qnr_schema_version": "1.0.0"
}