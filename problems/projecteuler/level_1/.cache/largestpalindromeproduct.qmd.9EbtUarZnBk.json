{
    "cells": [
        {
            "id": "1",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
                "---\n",
                "title: \"Largest Palindrome Product\"\n",
                "engine: julia-1.11\n",
                "julia:\n",
                "  exeflags: [\"--project=/home/kevinsilberberg/paxnomada/projecteuler/\"]\n",
                "execute:\n",
                "  daemon: 3600\n",
                "  cache: true\n",
                "  freeze: auto\n",
                "---\n",
                "\n",
                "## Problem definition\n",
                "\n",
                "A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is\n",
                "\n",
                "\\begin{align}\n",
                "9009 = 91 \\times 99\n",
                "\\end{align}\n",
                "\n",
                "Find the largest palindrome made from the product of two 3-digit numbers.\n",
                "\n",
                "## Solution"
            ]
        },
        {
            "id": "2",
            "cell_type": "code",
            "metadata": {
            },
            "source": [
                "function isPalindrome(num::Int64)\n",
                "    x = Vector{Int}(undef, 18)\n",
                "    for i in eachindex(x)\n",
                "        x[i] = num % 10\n",
                "        num รท= 10\n",
                "    end\n",
                "    y = x[1:findlast(i -> i > 0, x)]\n",
                "    for i in eachindex(y)\n",
                "        if !(y[i] == y[end - i + 1])\n",
                "            return false\n",
                "        end\n",
                "    end\n",
                "    return true\n",
                "end\n",
                "\n",
                "function main()\n",
                "    current = 0\n",
                "    idx = (0, 0)\n",
                "    for i in 999:-1:900\n",
                "        for j in 999:-1:900\n",
                "            new = i*j\n",
                "            if (new > current && isPalindrome(new))\n",
                "                current = new\n",
                "                idx = (i, j)\n",
                "            end\n",
                "        end\n",
                "    end\n",
                "    println(\"$(current) = $(idx[1]) x $(idx[2])\")\n",
                "end\n",
                "main()"
            ],
            "outputs": [
                {
                    "output_type": "stream",
                    "name": "stdout",
                    "text": "906609 = 993 x 913\n"
                }
            ],
            "execution_count": 1
        },
        {
            "id": "3",
            "cell_type": "markdown",
            "metadata": {
            },
            "source": [
            ]
        }
    ],
    "timestamp": "2025-07-13T15:14:02.086",
    "file": "/home/kevinsilberberg/Repos/paxnomada/problems/projecteuler/level_1/largestpalindromeproduct.qmd",
    "qnr_schema_version": "1.0.0"
}